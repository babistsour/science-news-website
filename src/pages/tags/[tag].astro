---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';
import { getCollection } from "astro:content";




export async function getStaticPaths() {
   const allPosts = await getCollection("blog");

  // ALTERNATIVE FOR CONCAT SUNARRAYS TO ONE ARRAY - flatmap cuts all subarrays
   const tags = allPosts.flatMap((post: any) => post.data.tags ?? []);

   //Unique items arrays -  ignore repeated values
   const uniqueTags = [...new Set(tags)]

  //just return the object directly
  const finalObject = uniqueTags.map((uniquetag) => ({ params: { tag: uniquetag }, props: {posts: allPosts} }))

  console.log('All tags collected:', tags, uniqueTags, finalObject)

  return finalObject;
}


const { tag } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter((post: any) => post.data.tags?.includes(tag) )


---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {filteredPosts.map((post: any) => <BlogPost url={`/posts/${post.id}/`} title={post.data.title}/>)}
  </ul>
</BaseLayout>